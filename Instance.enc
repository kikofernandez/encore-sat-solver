module Instance

import Clause
import ImplicationGraph
import Vector
import VVector

local class Instance

  -- public attributes
  val nVars : int
  val implicationGraph : ImplicationGraph
  val clauses : Vector[Clause]

  def init(clauses : RVector[Clause], nVars : int) : unit
    this.clauses = clauses.toVector()
    this.nVars = nVars
    this.implicationGraph = new ImplicationGraph(this.nVars/2)
  end

  -- public methods
  def addClause(clause : Clause) : unit
    this.clauses.push(clause)
  end
end
